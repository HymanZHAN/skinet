{"version":3,"sources":["./src/app/order/order.service.ts","./src/app/order/order-detail/order-detail.component.ts","./src/app/order/order-detail/order-detail.component.html","./src/app/order/order.component.html","./src/app/order/order-routing.module.ts","./src/app/order/order.component.ts","./src/app/order/order.module.ts"],"names":["OrderService","http","baseUrl","environment","orders","BehaviorSubject","orders$","this","asObservable","order","order$","value","get","pipe","map","next","subscribe","err","console","error","orderId","OrderDetailComponent","activatedRoute","orderService","bcService","snapshot","paramMap","set","find","id","switchMap","loadOrders","of","orderItems$","orderItems","orderSummary$","createOrderSummary","currentOrders","length","status","orderShippingFee","shippingPrice","orderSubtotal","subtotal","orderTotal","total","routes","path","component","OrderComponent","data","breadcrumb","alias","OrderRoutingModule","OrderModule"],"mappings":"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","file":"314.2dff8bc41cd6898b242d.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { IOrder } from '../shared/models/order.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OrderService {\r\n  baseUrl = environment.apiUrl;\r\n\r\n  private orders = new BehaviorSubject<IOrder[]>([]);\r\n  orders$ = this.orders.asObservable();\r\n\r\n  private order = new BehaviorSubject<IOrder | null>(null);\r\n  order$ = this.order.asObservable();\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  get currentOrders() {\r\n    return this.orders.value;\r\n  }\r\n\r\n  loadOrders() {\r\n    return this.http\r\n      .get<IOrder[]>(`${this.baseUrl}/orders`)\r\n      .pipe(map((orders) => this.orders.next(orders)))\r\n      .subscribe(\r\n        () => {},\r\n        (err) => {\r\n          console.error(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  loadOrderById(orderId: number) {\r\n    return this.http\r\n      .get<IOrder>(`${this.baseUrl}/orders/${orderId}`)\r\n      .pipe(map((order) => this.order.next(order)));\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, switchMap, tap } from 'rxjs/operators';\r\nimport { IOrder, IOrderItem, IOrderSummary } from 'src/app/shared/models/order.model';\r\nimport { BreadcrumbService } from 'xng-breadcrumb';\r\nimport { OrderService } from '../order.service';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'app-order-detail',\r\n  templateUrl: './order-detail.component.html',\r\n  styleUrls: ['./order-detail.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderDetailComponent {\r\n  orderItems$: Observable<IOrderItem[]>;\r\n  orderSummary$!: Observable<IOrderSummary>;\r\n  order$: Observable<IOrder | undefined>;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private orderService: OrderService,\r\n    private bcService: BreadcrumbService\r\n  ) {\r\n    const idParam = this.activatedRoute.snapshot.paramMap.get('id') ?? 0;\r\n    const orderId = +idParam;\r\n    this.bcService.set('@orderDetail', ' ');\r\n    this.order$ = this.orderService.orders$.pipe(\r\n      map((orders) => orders.find((order) => order.id === orderId)),\r\n      switchMap((order) => {\r\n        if (!order) {\r\n          this.orderService.loadOrders();\r\n        }\r\n        return of(order);\r\n      })\r\n    );\r\n\r\n    this.orderItems$ = this.order$.pipe(map((order) => (order ? order.orderItems : [])));\r\n    this.orderSummary$ = this.order$.pipe(map((order) => this.createOrderSummary(order)));\r\n\r\n    if (this.orderService.currentOrders.length === 0) {\r\n      this.orderService.loadOrders();\r\n    }\r\n\r\n    this.order$\r\n      .pipe(\r\n        untilDestroyed(this),\r\n        map((order) => {\r\n          if (order) {\r\n            this.bcService.set('@orderDetail', `Order #${order.id} - ${order.status}`);\r\n          }\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  createOrderSummary(order: IOrder | undefined): IOrderSummary {\r\n    if (order) {\r\n      return {\r\n        orderShippingFee: order.shippingPrice,\r\n        orderSubtotal: order.subtotal,\r\n        orderTotal: order.total,\r\n      };\r\n    } else {\r\n      return {\r\n        orderShippingFee: 0,\r\n        orderSubtotal: 0,\r\n        orderTotal: 0,\r\n      };\r\n    }\r\n  }\r\n}\r\n","<div class=\"grid grid-cols-3 grid-rows-2\">\r\n  <div class=\"col-span-2 pr-8\">\r\n    <app-basket-summary [readonly]=\"true\" [items$]=\"orderItems$\"></app-basket-summary>\r\n  </div>\r\n  <app-order-totals\r\n    [showHints]=\"false\"\r\n    [orderSummary$]=\"orderSummary$\"\r\n    [nextButtonLink]=\"'/orders'\"\r\n    [nextButtonText]=\"'Go back to orders'\"\r\n    class=\"col-start-3\"\r\n  ></app-order-totals>\r\n</div>\r\n","<div class=\"flex flex-col\">\r\n  <div class=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\r\n    <div class=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\r\n      <div class=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\r\n        <table class=\"min-w-full divide-y divide-gray-200\">\r\n          <thead class=\"bg-gray-50\">\r\n            <tr>\r\n              <th\r\n                scope=\"col\"\r\n                class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n              >\r\n                Order\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n              >\r\n                Date\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n              >\r\n                Total\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n              >\r\n                Status\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <ng-container *ngFor=\"let order of orders$ | async; let odd = odd; let even = even\">\r\n              <tr\r\n                routerLink=\"/orders/{{ order.id }}\"\r\n                class=\"cursor-pointer hover:bg-indigo-50\"\r\n                [ngClass]=\"{ 'bg-white': even, 'bg-gray-50': odd }\"\r\n              >\r\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                  # {{ order.id }}\r\n                </td>\r\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\r\n                  {{ order.orderDate | date }}\r\n                </td>\r\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\r\n                  {{ order.total | currency }}\r\n                </td>\r\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-600\">\r\n                  {{ order.status }}\r\n                </td>\r\n              </tr>\r\n            </ng-container>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { OrderDetailComponent } from './order-detail/order-detail.component';\r\nimport { OrderComponent } from './order.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OrderComponent,\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: OrderDetailComponent,\r\n    data: { breadcrumb: { alias: 'orderDetail' } },\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class OrderRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { IOrder } from '../shared/models/order.model';\r\nimport { OrderService } from './order.service';\r\n\r\n@Component({\r\n  selector: 'app-order',\r\n  templateUrl: './order.component.html',\r\n  styleUrls: ['./order.component.scss'],\r\n})\r\nexport class OrderComponent implements OnInit {\r\n  orders$: Observable<IOrder[]>;\r\n\r\n  constructor(private orderService: OrderService) {\r\n    this.orders$ = this.orderService.orders$;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.orderService.loadOrders();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { OrderRoutingModule } from './order-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { OrderDetailComponent } from './order-detail/order-detail.component';\r\nimport { OrderComponent } from './order.component';\r\n\r\n@NgModule({\r\n  declarations: [OrderDetailComponent, OrderComponent],\r\n  imports: [CommonModule, OrderRoutingModule, SharedModule],\r\n})\r\nexport class OrderModule {}\r\n"],"sourceRoot":"webpack:///"}