{"version":3,"sources":["./src/app/checkout/checkout-success/checkout-success.component.ts","./src/app/checkout/checkout-success/checkout-success.component.html","./src/app/shared/stepper/stepper.component.html","./src/app/shared/stepper/stepper.component.ts","./src/app/checkout/checkout-address/checkout-address.component.html","./src/app/checkout/checkout-address/checkout-address.component.ts","./src/app/checkout/checkout-delivery/checkout-delivery.component.html","./src/app/checkout/checkout-delivery/checkout-delivery.component.ts","./src/app/checkout/checkout-review/checkout-review.component.ts","./src/app/checkout/checkout-review/checkout-review.component.html","./src/app/checkout/checkout-payment/checkout-payment.component.html","./src/app/checkout/checkout-payment/checkout-payment.component.ts","./src/app/checkout/checkout-routing.module.ts","./src/app/checkout/checkout.component.ts","./src/app/checkout/checkout.component.html","./src/app/checkout/checkout.module.ts"],"names":["CheckoutSuccessComponent","router","orderLink","navigation","this","getCurrentNavigation","state","extras","order","id","StepperComponent","linearModeSelected","initialStep","stepSelected","linear","goToIndex","i","selectedIndex","emit","step","completed","provide","useExisting","CheckoutAddressComponent","accountService","toast","faAngleRight","faAngleLeft","checkoutForm","get","valid","dirty","updateUserAddress","value","subscribe","address","success","reset","err","console","error","CheckoutDeliveryComponent","checkoutService","deliveryMethods$","selectedDeliveryMethod$","deliveryMethod$","getDeliveryMethods","CheckoutReviewComponent","basketService","basketItems$","createPaymentIntent","resp","stepper","next","submitPaymentIntent","CheckoutPaymentComponent","cardHandler","onChange","bind","loading","spinner","cardNumberValid","cardExpiryValid","cardCvcValid","stripe","Stripe","elements","cardNumber","create","mount","cardNumberElement","nativeElement","addEventListener","cardExpiry","cardExpiryElement","cardCvc","cardCvcElement","destroy","event","cardErrors","message","elementType","complete","basket","currentBasket","createdOrder","createOrder","paymentResult","confirmPaymentWithStripe","paymentIntent","deleteBasketById","clearShippingMethod","navigate","confirmCardPayment","clientSecret","payment_method","card","billing_details","name","toPromise","submitOrder","routes","path","component","CheckoutComponent","fb","route","addressChangedSub","Subscription","createCheckoutForm","orderSummary$","getAddressFormValues","snapshot","queryParamMap","watchAddressFormChanges","watchDeliveryFormChanges","getDeliveryMethod","valueChanges","pipe","debounceTime","setShippingAddress","deliveryMethodId","setShippingMethod","deliveryMethod","patchValue","toString","emitEvent","unsubscribe","group","addressForm","firstName","lastName","street","city","zipCode","deliveryForm","paymentForm","nameOnCard","getUserAddress","handleStepSelected","data","breadcrumb","CheckoutRoutingModule","CheckoutModule"],"mappings":"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","file":"538.93985bd78e001b2eaa42.js","sourcesContent":["import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { IOrder } from 'src/app/shared/models/order.model';\r\n\r\n@Component({\r\n  selector: 'app-checkout-success',\r\n  templateUrl: './checkout-success.component.html',\r\n  styleUrls: ['./checkout-success.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CheckoutSuccessComponent {\r\n  order: IOrder | undefined;\r\n  orderLink = '';\r\n\r\n  constructor(private router: Router) {\r\n    const navigation = this.router.getCurrentNavigation();\r\n    const state = navigation?.extras?.state;\r\n    if (state) {\r\n      this.order = state as IOrder;\r\n      this.orderLink = `/orders/${this.order.id}`;\r\n    } else {\r\n      this.orderLink = `/orders`;\r\n    }\r\n  }\r\n}\r\n","<!-- This example requires Tailwind CSS v2.0+ -->\r\n<div class=\"max-w-7xl mx-auto text-center py-12 px-4 sm:px-6 lg:py-16 lg:px-8\">\r\n  <h2 class=\"text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\r\n    <span class=\"flex justify-center\">\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        class=\"h-24 w-24\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        stroke=\"#818CF8\"\r\n      >\r\n        <path\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n          stroke-width=\"2\"\r\n          d=\"M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z\"\r\n        />\r\n      </svg>\r\n    </span>\r\n    <span class=\"block\"> Order created successfully! </span>\r\n  </h2>\r\n  <div class=\"mt-8 flex justify-center\">\r\n    <div class=\"inline-flex rounded-md shadow\">\r\n      <a\r\n        routerLink=\"/shop\"\r\n        class=\"inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700\"\r\n      >\r\n        Go back to shopping page\r\n      </a>\r\n    </div>\r\n    <div class=\"ml-3 inline-flex\">\r\n      <a\r\n        routerLink=\"{{ orderLink }}\"\r\n        class=\"inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-indigo-700 bg-indigo-100 hover:bg-indigo-200\"\r\n      >\r\n        View order{{ order ? '' : 's' }}\r\n      </a>\r\n    </div>\r\n  </div>\r\n</div>\r\n","<nav aria-label=\"Progress\">\r\n  <ol class=\"space-y-4 md:flex md:space-y-0 md:space-x-8\">\r\n    <li\r\n      *ngFor=\"let step of steps; let i = index; let last = last; let first = first\"\r\n      class=\"step-element\"\r\n      [ngClass]=\"{ 'cursor-pointer': step.completed }\"\r\n      (click)=\"goToStep(i, step)\"\r\n    >\r\n      <a\r\n        [ngClass]=\"{\r\n          completed: step.completed,\r\n          current: i === selectedIndex,\r\n          upcoming: i !== selectedIndex && !step.completed\r\n        }\"\r\n      >\r\n        <span class=\"step-label\">\r\n          {{ step.label }}\r\n        </span>\r\n        <span class=\"text-sm font-medium\"></span>\r\n      </a>\r\n    </li>\r\n  </ol>\r\n</nav>\r\n\r\n<div class=\"pt-4\">\r\n  <ng-container [ngTemplateOutlet]=\"selected?.content || null\"></ng-container>\r\n</div>\r\n","import { CdkStep, CdkStepper } from '@angular/cdk/stepper';\r\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-stepper',\r\n  templateUrl: './stepper.component.html',\r\n  styleUrls: ['./stepper.component.scss'],\r\n  providers: [{ provide: CdkStepper, useExisting: StepperComponent }],\r\n})\r\nexport class StepperComponent extends CdkStepper implements OnInit {\r\n  @Input() linearModeSelected: boolean = false;\r\n  @Input() initialStep = 0;\r\n\r\n  @Output() stepSelected = new EventEmitter<number>();\r\n\r\n  ngOnInit(): void {\r\n    this.linear = this.linearModeSelected;\r\n    this.goToIndex(this.initialStep);\r\n  }\r\n\r\n  goToIndex(i: number) {\r\n    this.selectedIndex = i;\r\n    this.stepSelected.emit(i);\r\n  }\r\n\r\n  goToStep(i: number, step: CdkStep) {\r\n    if (step.completed) {\r\n      this.selectedIndex = i;\r\n      this.stepSelected.emit(i);\r\n    }\r\n  }\r\n}\r\n","<div class=\"mt-4\" *ngIf=\"checkoutForm\" [formGroup]=\"checkoutForm\">\r\n  <div class=\"flex justify-between items-center\">\r\n    <h4>Shipping Address</h4>\r\n    <app-button\r\n      (click)=\"saveUserAddress()\"\r\n      [disabled]=\"\r\n        !checkoutForm.get('addressForm')?.valid || !checkoutForm.get('addressForm')?.dirty\r\n      \"\r\n      class=\"text-xs\"\r\n    >\r\n      Save as default address\r\n    </app-button>\r\n  </div>\r\n  <div formGroupName=\"addressForm\" class=\"flex flex-wrap\">\r\n    <div class=\"pr-4 pt-4 w-1/2\">\r\n      <app-text-input [label]=\"'First Name'\" formControlName=\"firstName\"></app-text-input>\r\n    </div>\r\n    <div class=\"pt-4 w-1/2\">\r\n      <app-text-input [label]=\"'Last Name'\" formControlName=\"lastName\"></app-text-input>\r\n    </div>\r\n    <div class=\"pr-4 pt-4 w-1/2\">\r\n      <app-text-input [label]=\"'Street'\" formControlName=\"street\"></app-text-input>\r\n    </div>\r\n    <div class=\"pt-4 w-1/2\">\r\n      <app-text-input [label]=\"'City'\" formControlName=\"city\"></app-text-input>\r\n    </div>\r\n    <div class=\"pr-4 pt-4 w-1/2\">\r\n      <app-text-input [label]=\"'State'\" formControlName=\"state\"></app-text-input>\r\n    </div>\r\n    <div class=\"pt-4 w-1/2\">\r\n      <app-text-input [label]=\"'Zip Code'\" formControlName=\"zipCode\"></app-text-input>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"mt-6 flex justify-between\">\r\n  <app-button routerLink=\"/basket\">\r\n    <fa-icon [icon]=\"faAngleLeft\" class=\"text-white mr-2\"></fa-icon>\r\n    Basket\r\n  </app-button>\r\n  <button\r\n    cdkStepperNext\r\n    class=\"primary\"\r\n    [ngClass]=\"{ disabled: checkoutForm.get('addressForm')?.invalid }\"\r\n  >\r\n    Delivery <fa-icon class=\"text-white ml-2\" [icon]=\"faAngleRight\"></fa-icon>\r\n  </button>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { HotToastService } from '@ngneat/hot-toast';\r\nimport { AccountService } from 'src/app/account/account.service';\r\nimport { faAngleRight, faAngleLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-checkout-address',\r\n  templateUrl: './checkout-address.component.html',\r\n  styleUrls: ['./checkout-address.component.scss'],\r\n})\r\nexport class CheckoutAddressComponent {\r\n  @Input() checkoutForm!: FormGroup;\r\n\r\n  faAngleRight = faAngleRight;\r\n  faAngleLeft = faAngleLeft;\r\n\r\n  constructor(private accountService: AccountService, private toast: HotToastService) {}\r\n\r\n  saveUserAddress() {\r\n    if (\r\n      this.checkoutForm.get('addressForm')?.valid &&\r\n      this.checkoutForm.get('addressForm')?.dirty\r\n    ) {\r\n      this.accountService.updateUserAddress(this.checkoutForm.get('addressForm')?.value).subscribe(\r\n        (address) => {\r\n          this.toast.success('Address saved');\r\n          this.checkoutForm.get('addressForm')?.reset(address);\r\n        },\r\n        (err) => {\r\n          console.error(err);\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n","<div class=\"mt-4\" [formGroup]=\"checkoutForm\">\r\n  <div formGroupName=\"deliveryForm\" class=\"flex flex-wrap\">\r\n    <fieldset>\r\n      <legend class=\"sr-only\">Delivery pricing</legend>\r\n      <div class=\"relative bg-white rounded-md -space-y-px\">\r\n        <!-- Checked: \"bg-indigo-50 border-indigo-200 z-10\", Not Checked: \"border-gray-200\" -->\r\n        <label\r\n          *ngFor=\"let method of deliveryMethods$ | async; let first = first; let last = last\"\r\n          class=\"border-gray-200 relative border p-4 flex flex-col cursor-pointer md:pl-4 md:pr-6 md:grid md:grid-cols-3\"\r\n          [ngClass]=\"{\r\n            'rounded-t-md': first,\r\n            'rounded-b-md': last,\r\n            'bg-indigo-50 border-indigo-200 z-10':\r\n              (selectedDeliveryMethod$ | async)?.id === method.id\r\n          }\"\r\n        >\r\n          <div class=\"flex items-center text-sm\">\r\n            <input\r\n              formControlName=\"deliveryMethod\"\r\n              value=\"{{ method.id }}\"\r\n              type=\"radio\"\r\n              class=\"h-4 w-4 text-indigo-600 border-gray-300 focus:ring-indigo-500\"\r\n              aria-labelledby=\"pricing-plans-0-label\"\r\n              aria-describedby=\"pricing-plans-0-description-0 pricing-plans-0-description-1\"\r\n            />\r\n            <span id=\"pricing-plans-0-label\" class=\"ml-3 font-medium text-gray-900\">\r\n              {{ method.shortName }}\r\n            </span>\r\n          </div>\r\n          <p\r\n            id=\"pricing-plans-0-description-0\"\r\n            class=\"ml-6 pl-1 text-sm md:ml-0 md:pl-0 md:text-center\"\r\n          >\r\n            <!-- Checked: \"text-indigo-900\", Not Checked: \"text-gray-900\" -->\r\n            <span\r\n              class=\"text-gray-900 font-medium\"\r\n              [ngClass]=\"{\r\n                'text-indigo-900': (selectedDeliveryMethod$ | async)?.id === method.id\r\n              }\"\r\n            >\r\n              {{ method.price | currency }}\r\n            </span>\r\n          </p>\r\n          <!-- Checked: \"text-indigo-700\", Not Checked: \"text-gray-500\" -->\r\n          <p\r\n            id=\"pricing-plans-0-description-1\"\r\n            class=\"text-gray-500 ml-6 pl-1 text-sm md:ml-0 md:pl-0 md:text-right\"\r\n            [ngClass]=\"{ 'text-indigo-700': (selectedDeliveryMethod$ | async)?.id === method.id }\"\r\n          >\r\n            {{ method.description }}\r\n          </p>\r\n        </label>\r\n      </div>\r\n    </fieldset>\r\n  </div>\r\n</div>\r\n<div class=\"mt-6 flex justify-between\">\r\n  <button cdkStepperPrevious class=\"primary\">\r\n    <fa-icon [icon]=\"faAngleLeft\" class=\"text-white mr-2\"></fa-icon>\r\n    Address\r\n  </button>\r\n  <button\r\n    cdkStepperNext\r\n    class=\"primary\"\r\n    [ngClass]=\"{ disabled: checkoutForm.get('deliveryForm')?.invalid }\"\r\n  >\r\n    Delivery <fa-icon class=\"text-white ml-2\" [icon]=\"faAngleRight\"></fa-icon>\r\n  </button>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { IDeliveryMethod } from 'src/app/shared/models/delivery-method.model';\r\nimport { CheckoutService } from '../checkout.service';\r\nimport { faAngleRight, faAngleLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-checkout-delivery',\r\n  templateUrl: './checkout-delivery.component.html',\r\n  styleUrls: ['./checkout-delivery.component.scss'],\r\n})\r\nexport class CheckoutDeliveryComponent implements OnInit {\r\n  @Input() checkoutForm!: FormGroup;\r\n\r\n  deliveryMethods$: Observable<IDeliveryMethod[]>;\r\n  selectedDeliveryMethod$: Observable<IDeliveryMethod>;\r\n\r\n  faAngleRight = faAngleRight;\r\n  faAngleLeft = faAngleLeft;\r\n\r\n  constructor(private checkoutService: CheckoutService) {\r\n    this.deliveryMethods$ = this.checkoutService.deliveryMethods$;\r\n    this.selectedDeliveryMethod$ = this.checkoutService.deliveryMethod$;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.checkoutService.getDeliveryMethods().subscribe(\r\n      () => {},\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { CdkStepper } from '@angular/cdk/stepper';\r\nimport { Component, Input } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { BasketService } from 'src/app/basket/basket.service';\r\nimport { IBasketItem } from 'src/app/shared/models/basket.model';\r\n\r\n@Component({\r\n  selector: 'app-checkout-review',\r\n  templateUrl: './checkout-review.component.html',\r\n  styleUrls: ['./checkout-review.component.scss'],\r\n})\r\nexport class CheckoutReviewComponent {\r\n  @Input() stepper!: CdkStepper;\r\n  basketItems$: Observable<IBasketItem[]>;\r\n\r\n  constructor(private basketService: BasketService) {\r\n    this.basketItems$ = this.basketService.basketItems$;\r\n  }\r\n\r\n  submitPaymentIntent() {\r\n    this.basketService.createPaymentIntent().subscribe(\r\n      (resp: any) => {\r\n        this.stepper.next();\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<app-basket-summary [readonly]=\"true\" [items$]=\"basketItems$\"></app-basket-summary>\r\n<app-button (click)=\"submitPaymentIntent()\" class=\"block mt-6\">Go to payment</app-button>\r\n","<div [formGroup]=\"checkoutForm\">\r\n  <div formGroupName=\"paymentForm\" class=\"mt-4 grid grid-cols-4 gap-4\">\r\n    <fieldset class=\"col-span-2\">\r\n      <app-text-input formControlName=\"nameOnCard\" [label]=\"'Name on card'\"></app-text-input>\r\n    </fieldset>\r\n    <fieldset class=\"col-start-3 col-span-2 h-48\">\r\n      <legend class=\"block text-sm font-medium text-gray-700\">Card details</legend>\r\n      <div>\r\n        <div\r\n          #cardNumber\r\n          class=\"mt-1 px-3 py-2 border border-gray-300 bg-white rounded-md shadow-sm\"\r\n        ></div>\r\n        <div\r\n          #cardExpiry\r\n          class=\"mt-2 px-3 py-2 border border-gray-300 bg-white rounded-md shadow-sm\"\r\n        ></div>\r\n        <div\r\n          #cardCvc\r\n          class=\"mt-2 px-3 py-2 border border-gray-300 bg-white rounded-md shadow-sm\"\r\n        ></div>\r\n        <ng-container *ngIf=\"cardErrors\">\r\n          <p class=\"mt-2 text-sm text-red-600\">{{ cardErrors }}</p>\r\n        </ng-container>\r\n      </div>\r\n    </fieldset>\r\n  </div>\r\n</div>\r\n\r\n<app-button\r\n  (click)=\"submitOrder()\"\r\n  [disabled]=\"\r\n    loading ||\r\n    checkoutForm.get('paymentForm')?.invalid ||\r\n    !cardNumberValid ||\r\n    !cardExpiryValid ||\r\n    !cardCvcValid\r\n  \"\r\n>\r\n  Submit Order\r\n  <fa-icon *ngIf=\"loading\" [icon]=\"spinner\" [spin]=\"true\" class=\"text-white ml-2\"></fa-icon>\r\n</app-button>\r\n","import { AfterViewInit, Component, ElementRef, Input, OnDestroy, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\r\nimport { HotToastService } from '@ngneat/hot-toast';\r\nimport { BasketService } from 'src/app/basket/basket.service';\r\nimport { IBasket } from 'src/app/shared/models/basket.model';\r\nimport { CheckoutService } from '../checkout.service';\r\n\r\ndeclare var Stripe: any;\r\n\r\n@Component({\r\n  selector: 'app-checkout-payment',\r\n  templateUrl: './checkout-payment.component.html',\r\n  styleUrls: ['./checkout-payment.component.scss'],\r\n})\r\nexport class CheckoutPaymentComponent implements AfterViewInit, OnDestroy {\r\n  @Input() checkoutForm!: FormGroup;\r\n  @ViewChild('cardNumber', { static: true }) cardNumberElement!: ElementRef;\r\n  @ViewChild('cardExpiry', { static: true }) cardExpiryElement!: ElementRef;\r\n  @ViewChild('cardCvc', { static: true }) cardCvcElement!: ElementRef;\r\n\r\n  stripe: any;\r\n  cardNumber: any;\r\n  cardExpiry: any;\r\n  cardCvc: any;\r\n  cardErrors: any;\r\n\r\n  cardHandler = this.onChange.bind(this);\r\n\r\n  loading = false;\r\n  spinner = faSpinner;\r\n\r\n  cardNumberValid = false;\r\n  cardExpiryValid = false;\r\n  cardCvcValid = false;\r\n\r\n  constructor(\r\n    private basketService: BasketService,\r\n    private checkoutService: CheckoutService,\r\n    private toast: HotToastService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.stripe = Stripe(\r\n      'pk_test_51IxH3EDyHakC0pIh8eVF03jQNroKS6COHRK085vxfPJrFJGoktdacfhwP1qpR6oGedm5DqU0yx6bkHOAOce12UXm00J9wJKt0a'\r\n    );\r\n\r\n    const elements = this.stripe.elements();\r\n\r\n    this.cardNumber = elements.create('cardNumber');\r\n    this.cardNumber.mount(this.cardNumberElement.nativeElement);\r\n    this.cardNumber.addEventListener('change', this.cardHandler);\r\n\r\n    this.cardExpiry = elements.create('cardExpiry');\r\n    this.cardExpiry.mount(this.cardExpiryElement.nativeElement);\r\n    this.cardExpiry.addEventListener('change', this.cardHandler);\r\n\r\n    this.cardCvc = elements.create('cardCvc');\r\n    this.cardCvc.mount(this.cardCvcElement.nativeElement);\r\n    this.cardCvc.addEventListener('change', this.cardHandler);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.cardNumber.destroy();\r\n    this.cardExpiry.destroy();\r\n    this.cardCvc.destroy();\r\n  }\r\n\r\n  onChange(event: any) {\r\n    if (event.error) {\r\n      this.cardErrors = event.error.message;\r\n    } else {\r\n      this.cardErrors = null;\r\n    }\r\n\r\n    switch (event.elementType) {\r\n      case 'cardNumber':\r\n        this.cardNumberValid = event.complete;\r\n        break;\r\n      case 'cardExpiry':\r\n        this.cardExpiryValid = event.complete;\r\n        break;\r\n      case 'cardCvc':\r\n        this.cardCvcValid = event.complete;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  async submitOrder() {\r\n    this.loading = true;\r\n    const basket = this.basketService.currentBasket;\r\n    try {\r\n      const createdOrder = await this.createOrder(basket);\r\n      const paymentResult = await this.confirmPaymentWithStripe(basket);\r\n\r\n      if (paymentResult.paymentIntent) {\r\n        this.basketService.deleteBasketById(basket.id);\r\n        this.checkoutService.clearShippingMethod();\r\n        const navigationExtras: NavigationExtras = { state: createdOrder };\r\n        this.router.navigate(['checkout/success'], navigationExtras);\r\n      } else {\r\n        this.toast.error(paymentResult.error.message);\r\n      }\r\n\r\n      this.loading = false;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.loading = false;\r\n    }\r\n  }\r\n\r\n  private async confirmPaymentWithStripe(basket: IBasket) {\r\n    return this.stripe.confirmCardPayment(basket.clientSecret, {\r\n      payment_method: {\r\n        card: this.cardNumber,\r\n        billing_details: {\r\n          name: this.checkoutForm.get('paymentForm')?.get('nameOnCard')?.value,\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  private async createOrder(basket: IBasket) {\r\n    return this.checkoutService.createOrder().toPromise();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CheckoutSuccessComponent } from './checkout-success/checkout-success.component';\r\nimport { CheckoutComponent } from './checkout.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: CheckoutComponent },\r\n  { path: 'success', component: CheckoutSuccessComponent, data: { breadcrumb: 'Success' } },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CheckoutRoutingModule {}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { AccountService } from '../account/account.service';\r\nimport { CheckoutService } from './checkout.service';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { IAddressFormValue } from '../shared/models/address.model';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { IOrderSummary } from '../shared/models/order.model';\r\nimport { IDeliveryMethod } from '../shared/models/delivery-method.model';\r\nimport { HotToastService } from '@ngneat/hot-toast';\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'app-checkout',\r\n  templateUrl: './checkout.component.html',\r\n  styleUrls: ['./checkout.component.scss'],\r\n})\r\nexport class CheckoutComponent implements OnInit {\r\n  checkoutForm: FormGroup;\r\n  addressChangedSub: Subscription | undefined = Subscription.EMPTY;\r\n  step: number = 0;\r\n  orderSummary$: Observable<IOrderSummary>;\r\n  deliveryMethod$: Observable<IDeliveryMethod>;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private accountService: AccountService,\r\n    private checkoutService: CheckoutService,\r\n    private route: ActivatedRoute,\r\n    private toast: HotToastService\r\n  ) {\r\n    this.checkoutForm = this.createCheckoutForm();\r\n    this.orderSummary$ = this.checkoutService.orderSummary$;\r\n    this.deliveryMethod$ = this.checkoutService.deliveryMethod$;\r\n\r\n    this.getAddressFormValues();\r\n\r\n    const initialStep = this.route.snapshot.queryParamMap.get('step') ?? '0';\r\n    this.step = +initialStep;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.watchAddressFormChanges();\r\n    this.watchDeliveryFormChanges();\r\n    this.getDeliveryMethod();\r\n  }\r\n\r\n  private watchAddressFormChanges() {\r\n    this.checkoutForm\r\n      .get('addressForm')\r\n      ?.valueChanges.pipe(debounceTime(500), untilDestroyed(this))\r\n      .subscribe((address: IAddressFormValue) => {\r\n        this.checkoutService.setShippingAddress(address);\r\n      });\r\n  }\r\n\r\n  private watchDeliveryFormChanges() {\r\n    this.checkoutForm\r\n      .get('deliveryForm')\r\n      ?.get('deliveryMethod')\r\n      ?.valueChanges.pipe(untilDestroyed(this))\r\n      .subscribe((deliveryMethodId: string) => {\r\n        this.checkoutService.setShippingMethod(deliveryMethodId);\r\n      });\r\n  }\r\n\r\n  private getDeliveryMethod() {\r\n    this.deliveryMethod$\r\n      .subscribe((deliveryMethod) => {\r\n        if (deliveryMethod.id) {\r\n          this.checkoutForm\r\n            .get('deliveryForm')\r\n            ?.get('deliveryMethod')\r\n            ?.patchValue(deliveryMethod.id.toString(), { emitEvent: false });\r\n        }\r\n      })\r\n      .unsubscribe();\r\n  }\r\n\r\n  private createCheckoutForm() {\r\n    return this.fb.group({\r\n      addressForm: this.fb.group({\r\n        firstName: [null, Validators.required],\r\n        lastName: [null, Validators.required],\r\n        street: [null, Validators.required],\r\n        city: [null, Validators.required],\r\n        state: [null, Validators.required],\r\n        zipCode: [null, Validators.required],\r\n      }),\r\n      deliveryForm: this.fb.group({\r\n        deliveryMethod: [null, Validators.required],\r\n      }),\r\n      paymentForm: this.fb.group({\r\n        nameOnCard: [null, Validators.required],\r\n      }),\r\n    });\r\n  }\r\n\r\n  getAddressFormValues() {\r\n    this.accountService.getUserAddress().subscribe(\r\n      (address) => {\r\n        if (address) {\r\n          this.checkoutForm.get('addressForm')?.patchValue(address);\r\n        }\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  handleStepSelected(selectedIndex: number) {\r\n    if (selectedIndex === 10) {\r\n      this.checkoutService.createPaymentIntent().subscribe(\r\n        () => {\r\n          this.toast.success('Payment intent created successfully.');\r\n        },\r\n        () => {\r\n          this.toast.error('Payment intent creation failed');\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n","<div class=\"grid grid-cols-3 grid-rows-2\">\r\n  <div class=\"col-span-2 pr-8\">\r\n    <app-stepper\r\n      [linearModeSelected]=\"true\"\r\n      [initialStep]=\"step\"\r\n      (stepSelected)=\"handleStepSelected($event)\"\r\n      #appStepper\r\n    >\r\n      <cdk-step [label]=\"'Address'\" [completed]=\"checkoutForm.get('addressForm')?.valid\">\r\n        <app-checkout-address [checkoutForm]=\"checkoutForm\"></app-checkout-address>\r\n      </cdk-step>\r\n      <cdk-step [label]=\"'Delivery Method'\" [completed]=\"checkoutForm.get('deliveryForm')?.valid\">\r\n        <app-checkout-delivery [checkoutForm]=\"checkoutForm\"></app-checkout-delivery>\r\n      </cdk-step>\r\n      <cdk-step [label]=\"'Review'\">\r\n        <app-checkout-review [stepper]=\"appStepper\"></app-checkout-review>\r\n      </cdk-step>\r\n      <cdk-step [label]=\"'Payment'\">\r\n        <app-checkout-payment [checkoutForm]=\"checkoutForm\"></app-checkout-payment>\r\n      </cdk-step>\r\n    </app-stepper>\r\n  </div>\r\n  <app-order-totals\r\n    [orderSummary$]=\"orderSummary$\"\r\n    [nextButtonLink]=\"'/basket'\"\r\n    [nextButtonText]=\"'Go back to basket'\"\r\n    class=\"col-start-3\"\r\n  ></app-order-totals>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CheckoutRoutingModule } from './checkout-routing.module';\r\nimport { CheckoutComponent } from './checkout.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { CheckoutAddressComponent } from './checkout-address/checkout-address.component';\r\nimport { CheckoutDeliveryComponent } from './checkout-delivery/checkout-delivery.component';\r\nimport { CheckoutPaymentComponent } from './checkout-payment/checkout-payment.component';\r\nimport { CheckoutReviewComponent } from './checkout-review/checkout-review.component';\r\nimport { CheckoutSuccessComponent } from './checkout-success/checkout-success.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CheckoutComponent,\r\n    CheckoutAddressComponent,\r\n    CheckoutDeliveryComponent,\r\n    CheckoutPaymentComponent,\r\n    CheckoutReviewComponent,\r\n    CheckoutSuccessComponent,\r\n  ],\r\n  imports: [CommonModule, CheckoutRoutingModule, SharedModule],\r\n  exports: [CheckoutComponent],\r\n})\r\nexport class CheckoutModule {}\r\n"],"sourceRoot":"webpack:///"}