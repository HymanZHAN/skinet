{"version":3,"sources":["./src/app/account/login/login.component.ts","./src/app/account/login/login.component.html","./node_modules/rxjs/_esm2015/internal/util/isNumeric.js","./node_modules/rxjs/_esm2015/internal/observable/timer.js","./src/app/account/register/register.component.html","./src/app/account/account-routing.module.ts","./src/app/account/register/register.component.ts","./src/app/account/account.module.ts"],"names":["LoginComponent","accountService","router","route","toastService","returnUrl","this","snapshot","queryParams","createLoginForm","loginForm","email","password","login","value","subscribe","navigateByUrl","success","error","onSubmit","isNumeric","val","isArray","parseFloat","dispatch","state","index","period","subscriber","next","closed","complete","schedule","routes","path","component","RegisterComponent","fb","errors","createRegisterForm","registerForm","group","displayName","validateEmailNotTaken","register","console","control","dueTime","periodOrScheduler","scheduler","Number","isScheduler","Observable","due","now","timer","pipe","switchMap","checkEmailExists","map","res","emailExists","of","AccountRoutingModule","AccountModule"],"mappings":"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","file":"422.6bca233339e5ff5f77ac.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { HotToastService } from '@ngneat/hot-toast';\r\nimport { AccountService } from '../account.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm!: FormGroup;\r\n  returnUrl = '';\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private toastService: HotToastService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.returnUrl = this.route.snapshot.queryParams.returnUrl || '';\r\n    this.createLoginForm();\r\n  }\r\n\r\n  createLoginForm() {\r\n    this.loginForm = new FormGroup({\r\n      email: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$'),\r\n      ]),\r\n      password: new FormControl('', Validators.required),\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.accountService.login(this.loginForm.value).subscribe(\r\n      () => {\r\n        this.router.navigateByUrl(this.returnUrl);\r\n        this.toastService.success('Logged in successfully!');\r\n      },\r\n      (error) => {\r\n        // this.toastService.error('Login failed');\r\n      }\r\n    );\r\n  }\r\n}\r\n","<!--\r\n  This example requires Tailwind CSS v2.0+ \r\n  \r\n  This example requires some changes to your config:\r\n  \r\n  ```\r\n  // tailwind.config.js\r\n  module.exports = {\r\n    // ...\r\n    plugins: [\r\n      // ...\r\n      require('@tailwindcss/forms'),\r\n    ]\r\n  }\r\n  ```\r\n-->\r\n<div class=\"flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\r\n  <div class=\"max-w-md w-full space-y-8\">\r\n    <div>\r\n      <svg\r\n        aria-hidden=\"true\"\r\n        focusable=\"false\"\r\n        data-prefix=\"fas\"\r\n        data-icon=\"skiing\"\r\n        class=\"block h-20 w-auto mx-auto\"\r\n        role=\"img\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 512 512\"\r\n        data-ember-extension=\"1\"\r\n      >\r\n        <path\r\n          fill=\"#4f46e5\"\r\n          d=\"M432 96c26.5 0 48-21.5 48-48S458.5 0 432 0s-48 21.5-48 48 21.5 48 48 48zm73 356.1c-9.4-9.4-24.6-9.4-33.9 0-12.1 12.1-30.5 15.4-45.1 8.7l-135.8-70.2 49.2-73.8c12.7-19 10.2-44.5-6-60.6L293 215.7l-107-53.1c-2.9 19.9 3.4 40 17.7 54.4l75.1 75.2-45.9 68.8L35 258.7c-11.7-6-26.2-1.5-32.3 10.3-6.1 11.8-1.5 26.3 10.3 32.3l391.9 202.5c11.9 5.5 24.5 8.1 37.1 8.1 23.2 0 46-9 63-26 9.3-9.3 9.3-24.5 0-33.8zM120 91.6l-11.5 22.5c14.4 7.3 31.2 4.9 42.8-4.8l47.2 23.4c-.1.1-.1.2-.2.3l114.5 56.8 32.4-13 6.4 19.1c4 12.1 12.6 22 24 27.7l58.1 29c15.9 7.9 35 1.5 42.9-14.3 7.9-15.8 1.5-35-14.3-42.9l-52.1-26.1-17.1-51.2c-8.1-24.2-40.9-56.6-84.5-39.2l-81.2 32.5-62.5-31c.3-14.5-7.2-28.6-20.9-35.6l-11.1 21.7h-.2l-34.4-7c-1.8-.4-3.7.2-5 1.7-1.9 2.2-1.7 5.5.5 7.4l26.2 23z\"\r\n        />\r\n      </svg>\r\n      <h2 class=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Login</h2>\r\n    </div>\r\n\r\n    <form class=\"mt-8 space-y-6\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" method=\"POST\">\r\n      <app-text-input\r\n        formControlName=\"email\"\r\n        [label]=\"'Email Address'\"\r\n        [type]=\"'email'\"\r\n      ></app-text-input>\r\n\r\n      <app-text-input\r\n        formControlName=\"password\"\r\n        [label]=\"'Password'\"\r\n        [type]=\"'password'\"\r\n      ></app-text-input>\r\n\r\n      <div>\r\n        <button\r\n          type=\"submit\"\r\n          class=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n        >\r\n          Sign in\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { isArray } from './isArray';\nexport function isNumeric(val) {\n    return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n//# sourceMappingURL=isNumeric.js.map","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function timer(dueTime = 0, periodOrScheduler, scheduler) {\n    let period = -1;\n    if (isNumeric(periodOrScheduler)) {\n        period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n    }\n    else if (isScheduler(periodOrScheduler)) {\n        scheduler = periodOrScheduler;\n    }\n    if (!isScheduler(scheduler)) {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        const due = isNumeric(dueTime)\n            ? dueTime\n            : (+dueTime - scheduler.now());\n        return scheduler.schedule(dispatch, due, {\n            index: 0, period, subscriber\n        });\n    });\n}\nfunction dispatch(state) {\n    const { index, period, subscriber } = state;\n    subscriber.next(index);\n    if (subscriber.closed) {\n        return;\n    }\n    else if (period === -1) {\n        return subscriber.complete();\n    }\n    state.index = index + 1;\n    this.schedule(state, period);\n}\n//# sourceMappingURL=timer.js.map","<!--\r\n  This example requires Tailwind CSS v2.0+ \r\n  \r\n  This example requires some changes to your config:\r\n  \r\n  ```\r\n  // tailwind.config.js\r\n  module.exports = {\r\n    // ...\r\n    plugins: [\r\n      // ...\r\n      require('@tailwindcss/forms'),\r\n    ]\r\n  }\r\n  ```\r\n-->\r\n<div class=\"flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\r\n  <div class=\"max-w-md w-full space-y-8\">\r\n    <div>\r\n      <svg\r\n        aria-hidden=\"true\"\r\n        focusable=\"false\"\r\n        data-prefix=\"fas\"\r\n        data-icon=\"skiing\"\r\n        class=\"block h-20 w-auto mx-auto\"\r\n        role=\"img\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 512 512\"\r\n        data-ember-extension=\"1\"\r\n      >\r\n        <path\r\n          fill=\"#4f46e5\"\r\n          d=\"M432 96c26.5 0 48-21.5 48-48S458.5 0 432 0s-48 21.5-48 48 21.5 48 48 48zm73 356.1c-9.4-9.4-24.6-9.4-33.9 0-12.1 12.1-30.5 15.4-45.1 8.7l-135.8-70.2 49.2-73.8c12.7-19 10.2-44.5-6-60.6L293 215.7l-107-53.1c-2.9 19.9 3.4 40 17.7 54.4l75.1 75.2-45.9 68.8L35 258.7c-11.7-6-26.2-1.5-32.3 10.3-6.1 11.8-1.5 26.3 10.3 32.3l391.9 202.5c11.9 5.5 24.5 8.1 37.1 8.1 23.2 0 46-9 63-26 9.3-9.3 9.3-24.5 0-33.8zM120 91.6l-11.5 22.5c14.4 7.3 31.2 4.9 42.8-4.8l47.2 23.4c-.1.1-.1.2-.2.3l114.5 56.8 32.4-13 6.4 19.1c4 12.1 12.6 22 24 27.7l58.1 29c15.9 7.9 35 1.5 42.9-14.3 7.9-15.8 1.5-35-14.3-42.9l-52.1-26.1-17.1-51.2c-8.1-24.2-40.9-56.6-84.5-39.2l-81.2 32.5-62.5-31c.3-14.5-7.2-28.6-20.9-35.6l-11.1 21.7h-.2l-34.4-7c-1.8-.4-3.7.2-5 1.7-1.9 2.2-1.7 5.5.5 7.4l26.2 23z\"\r\n        />\r\n      </svg>\r\n      <h2 class=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Register</h2>\r\n    </div>\r\n\r\n    <form class=\"mt-8 space-y-6\" [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\" method=\"POST\">\r\n      <app-text-input formControlName=\"displayName\" [label]=\"'Display Name'\"></app-text-input>\r\n\r\n      <app-text-input\r\n        formControlName=\"email\"\r\n        [label]=\"'Email Address'\"\r\n        [type]=\"'email'\"\r\n      ></app-text-input>\r\n\r\n      <app-text-input\r\n        formControlName=\"password\"\r\n        [label]=\"'Password'\"\r\n        [type]=\"'password'\"\r\n      ></app-text-input>\r\n\r\n      <ul>\r\n        <li *ngFor=\"let error of errors\" class=\"text-sm text-red-600\">{{ error }}</li>\r\n      </ul>\r\n      <div>\r\n        <button\r\n          type=\"submit\"\r\n          class=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:cursor-auto disabled:bg-indigo-300\"\r\n        >\r\n          Register\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AccountRoutingModule {}\r\n","import { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AsyncValidatorFn, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { HotToastService } from '@ngneat/hot-toast';\r\nimport { of, timer } from 'rxjs';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport { AccountService } from '../account.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss'],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  registerForm!: FormGroup;\r\n  errors: string[] = [];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private accountService: AccountService,\r\n    private router: Router,\r\n    private toastService: HotToastService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.createRegisterForm();\r\n  }\r\n\r\n  createRegisterForm() {\r\n    this.registerForm = this.fb.group({\r\n      displayName: [null, [Validators.required]],\r\n      email: [\r\n        null,\r\n        [Validators.required, Validators.pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$')],\r\n        [this.validateEmailNotTaken()],\r\n      ],\r\n      password: [null, [Validators.required]],\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.accountService.register(this.registerForm.value).subscribe(\r\n      () => {\r\n        this.router.navigateByUrl('/shop');\r\n        this.toastService.success('Registered successfully!');\r\n      },\r\n      (error) => {\r\n        // this.toastService.error('');\r\n        this.errors = error.errors;\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  validateEmailNotTaken(): AsyncValidatorFn {\r\n    return (control) => {\r\n      return timer(500).pipe(\r\n        switchMap(() => {\r\n          if (!control.value) {\r\n            return of(null);\r\n          }\r\n          return this.accountService\r\n            .checkEmailExists(control.value)\r\n            .pipe(map((res) => (res ? { emailExists: true } : null)));\r\n        })\r\n      );\r\n    };\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AccountRoutingModule } from './account-routing.module';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, RegisterComponent],\r\n  imports: [CommonModule, AccountRoutingModule, SharedModule],\r\n})\r\nexport class AccountModule {}\r\n"],"sourceRoot":"webpack:///"}